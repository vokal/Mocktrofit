apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'maven-publish'
apply plugin: 'io.vokal.mocktrofit'
apply plugin: 'rats'

group = 'io.vokal.mock'
version = '1.0.0'

repositories {
    jcenter()
}

dependencies {
    compile project(':mocklib')
    compile 'com.squareup.retrofit:retrofit:1.9.0'
}

android {
    compileSdkVersion 23
    buildToolsVersion '25.0.2'

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 23

        versionName "1.0"
        versionCode 1
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

rats {
    server "https://vokalrats.ngrok.io"
    user ratsUser
    password ratsPass
    count 3
    message "git log --oneline HEAD^..HEAD".execute().text
}

artifacts {
    archives file("build/outputs/aar/mocktrofit-release.aar")
}

sourceSets {
    main {
        java.srcDirs = ['src/main/java']
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadoc(type: Javadoc) {
    source = project.android.sourceSets.main.java.srcDirs
    options.linkSource true
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//    def mocklib = rootProject.childProjects.get("mocklib")
//    source(source, mocklib.android.sourceSets.main.java.srcDirs)
//    classpath += mocklib.files(mocklib.android.getBootClasspath().join(File.pathSeparator))
    failOnError false
}

afterEvaluate {
    javadoc.classpath += files(android.libraryVariants.collect { variant ->
        variant.javaCompile.classpath.files
    })
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifactory {
    contextUrl = "${artifactory_contextUrl}"   //The base Artifactory URL if not overridden by the publisher/resolver
    publish {
        repository {
            repoKey = 'libs-release-local'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true
        }
        defaults {
            //This closure defines defaults for all 'artifactoryPublish' tasks of all projects the plugin is applied to
            publications("mocktrofit")
            publishBuildInfo = true   //Publish build-info to Artifactory (true by default)
            publishArtifacts = true   //Publish artifacts to Artifactory (true by default)
        }
    }
}

publishing {
    publications {
        mocktrofit(MavenPublication) {
            groupId group
            artifactId 'mocktrofit'
            version version
            artifact "build/outputs/aar/mocktrofit-release.aar"
            artifact sourcesJar
            artifact javadocJar
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.compile.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                }
            }
        }
    }
}

artifactoryPublish.dependsOn('assemble', 'javadocJar', 'sourcesJar', 'generatePomFileForMocktrofitPublication')
publish.dependsOn(artifactoryPublish)
